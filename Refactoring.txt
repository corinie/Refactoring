2018/05/28 Test-Driven Development : By Example 
From 1 to 87 Page

지호

일반적인 개발 프로세스 = 디자인 > 코드 작성 > (수동) 테스트 > 처음으로 돌아가 설계(디자인) 수정
TDD = 
Definition: 정확한 프로그래밍 목적을 디자인 단계에서 정의
RED: 실패하는 테스트 만들기
GREEN: 테스트에 통과할 만한 작은 코드를 작성하기
REFACTOR : 반복되는 코드, 긴 메소드, 큰 클래스, 긴 매개 변수 목록 등 코드를 효율적으로 바꾸기


구체적인 방법론 
1. 작은 테스트를 하나 추가한다
2. 모든 테스트를 실행해서 테스트가 실패하는 것을 확인한다.
3. 조금 수정한다.
4. 모든 테스를 실행해서 테스트가 성공하는 것을 확인한다.
5. 중복을 제거하기 위해 리팩토링을 한다.




EX)다중 통화를 지원하는 MONEY 객체의 예제
1차 정의 리스트
(
	$5 + 10CHF = $10 (환율이 2:1일 경우)
	$5 * 2 = $10
	amount를 private로 만들기
	Dollar의 부작용?
	Money의 반올림
)
각각의 리스트 항목을 처리하기 위한 작은 테스트를 진행한다.
컴파일 가능한, 그 후 생기는 문제점에 대해 다시 리스트 업하면서 진행한다.


ISSUE KEYWORD 의존성과 중복의 관계


=================================================================================================