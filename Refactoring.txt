2018/05/28 Test-Driven Development : By Example 
From 1 to 87 Page

지호

일반적인 개발 프로세스 = 디자인 > 코드 작성 > (수동) 테스트 > 처음으로 돌아가 설계(디자인) 수정
TDD = 
Definition: 정확한 프로그래밍 목적을 디자인 단계에서 정의
RED: 실패하는 테스트 만들기
GREEN: 테스트에 통과할 만한 작은 코드를 작성하기
REFACTOR : 반복되는 코드, 긴 메소드, 큰 클래스, 긴 매개 변수 목록 등 코드를 효율적으로 바꾸기


구체적인 방법론 
1. 작은 테스트를 하나 추가한다
2. 모든 테스트를 실행해서 테스트가 실패하는 것을 확인한다.
3. 조금 수정한다.
4. 모든 테스를 실행해서 테스트가 성공하는 것을 확인한다.
5. 중복을 제거하기 위해 리팩토링을 한다.




EX)다중 통화를 지원하는 MONEY 객체의 예제
1차 정의 리스트
(
	$5 + 10CHF = $10 (환율이 2:1일 경우)
	$5 * 2 = $10
	amount를 private로 만들기
	Dollar의 부작용?
	Money의 반올림
)
각각의 리스트 항목을 처리하기 위한 작은 테스트를 진행한다.
컴파일 가능한, 그 후 생기는 문제점에 대해 다시 리스트 업하면서 진행한다.


ISSUE KEYWORD 의존성과 중복의 관계


=================================================================================================
2018/05/28 자바 성능 튜닝 이야기
From 1 to 118 Page


StringBuffer
스레드에 안전하게 설계되어 있다.
여러개의 스레드에서 하나의 StringBuffer 객체를 처리해도 문제없다

StringBilder
단일 스레드에서만 안전성 보장
여러개의 스레드에서 하나의 StringBilder 객체를 처리하면 문제가 발생 할 수 있다.

-String은 짧은 문자열을 더할 경우 사용
-StringBuffer는 스레드에 안전한 프로그램이 필요할 때나, 개발 중인 시스템의 부분이
스레드에 안전한지 모를 경우 사용
-StringBilder는 스레드에 안전한지의 여부와 전혀 관계없는 프로그램을 개발할때 사용

--------------------------------------------------------------------------------

Collection

Set
데이터 추가 속도
1. HashSet
2. LinkedHashSet
3. TreeSet

저장되는 데이터의 크기를 알고 있을 경우에는 객체 생성시 크기를 미리 지정하는 
것이 성능상 유리

데이터 읽는 속도
1. LinkedHashSet
2. HashSet
3. TreeSet

데이터를 순서에 따라 탐색하는 작업이 필요할 때는 TreeSet을 사용하는 것이 좋다.
그럴필요가 없을 때는 HashSet이나 LinkedHashSet을 사용하는 것이 좋다.

List
데이터 추가 속도
1. ArrayList
2. Vector
3. LinkedList

데이터를 넣는 속도는 어떤 클래스든 큰 차이가 없다.

데이터 읽는 속도 
1. ArrayList
2. Vector
3. LinkedList

Vector는 여러스레드에서 접근 할 경우를 방지하기 위해서 get()메서드에 Synchronized
가 선언되어 있다.

--------------------------------------------------------------------------------

for 루프 성능 UP!

for(int i; i<list.size(); i++) X
매번 반복하면서 list.size()메서드를 호출하기 때문

int listSize = list.size();
for(int i; i<listSize; i++) O

반복문에서 동일한 메서드 반복 호출을 조심하자!

--------------------------------------------------------------------------------

Static 잘 활용하기

1. 자주 사용하고 절대 변하지 않는 변수는 final static으로 선언
2. 설정파일 정보 static으로 관리
3. 코드성 데이터는 DB에서 한번만 읽자 

================================================================================


